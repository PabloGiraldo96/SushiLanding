/* eslint-disable no-unused-vars */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/SushiSticks.glb 
*/
import { useGLTF, useScroll, Text } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/all";
import React, { useLayoutEffect, useRef, useState, useEffect } from "react";

gsap.registerPlugin(ScrollTrigger);

export const FloorHeight = 3.3;
export const NumberFloors = 2;

export function SushiSticks(props) {
  const { nodes, materials } = useGLTF("./models/SushiSticks.glb");
  const ref = useRef();
  const tl = useRef();
  const plateRef = useRef();
  const sushiRollRefs = useRef([]);
  const stickRef = useRef();
  const stickRefTwo = useRef();
  const enjoyText = useRef();
  const tinyRefs = useRef([]);
  const scroll = useScroll();
  const groupRef = useRef();
  const [containerHeight, setContainerHeight] = useState(0);

  useEffect(() => {
    // Obtener la altura del contenedor (110vh)
    const handleResize = () => {
      setContainerHeight(window.innerHeight * 1.1);
    };
    handleResize();
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      console.log(handleResize());
    };
  }, []);

  useFrame(() => {
    if (scroll && tl.current) {
      tl.current.seek(scroll.offset * tl.current.duration());
      groupRef.current.position.y = scroll.offset * -containerHeight;
    }
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // Plato principal
    tl.current.to(
      plateRef.current.position,
      {
        duration: 1.5,
        y: -1.7,
        ease: "power4.out",
      },
      0
    );

    // Rollos de sushi
    sushiRollRefs.current.forEach((sushiRef, index) => {
      tl.current.to(
        sushiRef.position,
        {
          duration: 2.5,
          y: -4.5,
          ease: "elastic.out(1,0.4)",
        },
        1 + index * 0.1
      );
    });

    // Tinyrefs
    tinyRefs.current.forEach((tinyRefs, index) => {
      tl.current.to(
        tinyRefs.position,
        {
          duration: 0.4,
          y: -2.5,
          ease: "elastic.out(0,0.8)",
        },
        1 + index * 0.1
      );
    });

    // Palillos
    tl.current.to(
      stickRef.current.position,
      {
        duration: 1.2,
        y: -2.5,
        ease: "bounce.out",
      },
      2
    );

    tl.current.to(
      stickRefTwo.current.position,
      {
        duration: 0.6,
        y: -2.2,
        ease: "bounce.out",
      },
      2
    );

    tl.current.to(
      enjoyText.current.position,
      {
        duration: 5,
        y: 18,
        ease: "elastic.out(1,0.9)",
      },
      1
    );
  }, []);

  return (
    <group
      {...props}
      dispose={null}
      ref={ref}
      position={[7, -12, -11]}
      rotation={[0, -Math.PI / 6, 0]}
    >
      <group ref={groupRef}>
        <group
          position={[-10.26, 0.275, 3.944]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[0] = el)}
        >
          <mesh geometry={nodes.Cube.geometry} material={materials.Material} />
          <mesh
            geometry={nodes.Cube_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <mesh
          geometry={nodes.Sushiplate.geometry}
          material={materials["Material.005"]}
          position={[-6.005, 4.373, 2.192]}
          ref={plateRef}
          scale={[4.549, 4.174, 3.508]}
        />
        <mesh
          geometry={nodes.Sticktwo.geometry}
          material={materials["Material.007"]}
          position={[-4.111, 3.408, -0.708]}
          rotation={[0.045, -0.016, -0.035]}
          ref={stickRef}
        />
        {/*comienzo de la lampara y la tabla de que tiene la salsa de soya*/}

        <group
          position={[-20.236, 0.002, 0.558]}
          scale={1.543}
          //ref={(el) => (tinyRefs.current = el)}
          ref={(el) => (tinyRefs.current[0] = el)}
          //ref={lampRef}
        >
          <mesh
            geometry={nodes.Plane003.geometry}
            material={materials["Material.008"]}
            ref={(el) => (tinyRefs.current[1] = el)}
            //ref={lampRef}
          />
          <mesh
            geometry={nodes.Plane003_1.geometry}
            material={materials["Material.009"]}
            //ref={lampRef}
            ref={(el) => (tinyRefs.current[2] = el)}
          />
          <mesh
            geometry={nodes.Plane003_2.geometry}
            material={materials["Material.010"]}
            ref={(el) => (tinyRefs.current[3] = el)}
            //ref={lampRef}
          />
          <mesh
            geometry={nodes.Plane003_3.geometry}
            material={materials["Material.011"]}
            ref={(el) => (tinyRefs.current[4] = el)}
            //ref={lampRef}
          />
          <mesh
            geometry={nodes.Plane003_4.geometry}
            material={materials["Material.012"]}
            ref={(el) => (tinyRefs.current[5] = el)}
            //ref={lampRef}
          />
          <mesh
            geometry={nodes.Plane003_5.geometry}
            material={materials["Material.013"]}
            ref={(el) => (tinyRefs.current[6] = el)}
            //ref={lampRef}
          />
          <mesh
            geometry={nodes.Plane003_6.geometry}
            material={materials["Material.014"]}
            ref={(el) => (tinyRefs.current[7] = el)}
            //ref={lampRef}
          />
        </group>
        <group
          position={[-10.231, 0.256, 1.442]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[1] = el)}
        >
          <mesh
            geometry={nodes.Cube003.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Cube003_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube003_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube003_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube003_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <group
          position={[-7.678, 0.31, 4.093]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[2] = el)}
        >
          <mesh
            geometry={nodes.Cube004.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Cube004_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube004_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube004_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube004_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <group
          position={[-7.649, 0.291, 1.591]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[3] = el)}
        >
          <mesh
            geometry={nodes.Cube005.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Cube005_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube005_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube005_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube005_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <group
          position={[-5.006, 0.305, 4.291]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[4] = el)}
        >
          <mesh
            geometry={nodes.Cube006.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Cube006_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube006_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube006_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube006_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <group
          position={[-4.977, 0.286, 1.788]}
          scale={0.745}
          ref={(el) => (sushiRollRefs.current[5] = el)}
        >
          <mesh
            geometry={nodes.Cube007.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Cube007_1.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cube007_2.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube007_3.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cube007_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
        <mesh
          geometry={nodes.Sticktwo001.geometry}
          material={materials["Material.007"]}
          position={[-2.34, 3.474, -0.067]}
          rotation={[0.078, -0.277, 0.048]}
          ref={stickRefTwo}
        />
      </group>
      {/*<Text
        position={[1, -7, -7]}
        fontSize={4.5}
        color="white"
        font="/fonts/CevicheOne-Regular.ttf"
        anchorX="center"
        anchorY="middle"
      >
        You will enjoy each roll
      </Text>*/}
      <Text
        position={[0, -14, -27]}
        fontSize={3.5}
        color="white"
        font="/fonts/CevicheOne-Regular.ttf"
        anchorX="center"
        anchorY="bottom"
        ref={enjoyText}
        class="enjoyText"
      >
        Call us: 555-55-55
      </Text>
    </group>
  );
}

useGLTF.preload("./models/SushiSticks.glb");
